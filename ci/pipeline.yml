anchors:
  github-release-source: &github-release-source
    owner: ((github-owner))
    repository: ((github-repository))
    access_token: ((github-ci-release-token))
  artifactory-repo-put-params: &artifactory-repo-put-params
    signing_key: ((signing-key))
    signing_passphrase: ((signing-passphrase))
    repo: libs-snapshot-local
    folder: distribution-repository
    build_uri: https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}
    build_number: ${BUILD_PIPELINE_NAME}-${BUILD_JOB_NAME}-${BUILD_NAME}
    disable_checksum_uploads: true
    threads: 8
  sonatype-task-params: &sonatype-task-params
    SONATYPE_USERNAME: ((sonatype-username))
    SONATYPE_PASSWORD: ((sonatype-password))
    SONATYPE_URL: ((sonatype-url))
    SONATYPE_STAGING_PROFILE_ID: ((sonatype-staging-profile-id))
  artifactory-task-params: &artifactory-task-params
    ARTIFACTORY_SERVER: ((artifactory-server))
    ARTIFACTORY_USERNAME: ((artifactory-username))
    ARTIFACTORY_PASSWORD: ((artifactory-password))
  docker-hub-task-params: &docker-hub-task-params
    DOCKER_HUB_USERNAME: ((docker-hub-username))
    DOCKER_HUB_PASSWORD: ((docker-hub-password))
  slack-fail-params: &slack-fail-params
    text: >
      :concourse-failed: <!here> <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} failed!>
    silent: true
    icon_emoji: ":concourse:"
    username: concourse-ci
  slack-success-params: &slack-success-params
    text: >
      :concourse-succeeded: <https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME} ${BUILD_JOB_NAME} was successful!>
    silent: true
    icon_emoji: ":concourse:"
    username: concourse-ci
resource_types:
- name: artifactory-resource
  type: registry-image
  source:
    repository: springio/artifactory-resource
    tag: "0.0.18"
    username: ((docker-hub-username))
    password: ((docker-hub-password))
- name: slack-notification
  type: registry-image
  source:
    repository: cfcommunity/slack-notification-resource
    username: ((docker-hub-username))
    password: ((docker-hub-password))
resources:
- name: git-repo
  type: git
  icon: github
  source:
    uri: https://github.com/((github-owner))/((github-repository)).git
    username: ((github-username))
    password: ((github-ci-release-token))
    branch: ((branch))
- name: github-pre-release
  type: github-release
  icon: briefcase-download-outline
  source:
    <<: *github-release-source
    pre_release: true
    release: false
- name: github-release
  type: github-release
  icon: briefcase-download
  source:
    <<: *github-release-source
    pre_release: false
    release: true
- name: ci-images-git-repo
  type: git
  icon: github
  source:
    uri: https://github.com/((github-owner))/((github-repository)).git
    branch: ((branch))
    paths: ["ci/images/*"]
- name: ci-image
  type: registry-image
  icon: docker
  source:
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: ((milestone))
    repository: ((docker-hub-ci-organization))/((ci-image))
- name: artifactory-repo
  type: artifactory-resource
  icon: package-variant
  source:
    uri: ((artifactory-server))
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: ((build-name))
- name: slack-alert
  type: slack-notification
  icon: slack
  source:
    url: ((slack-webhook-url))
jobs:
- name: build-ci-images
  plan:
  - get: ci-images-git-repo
    trigger: true
  - get: git-repo
  - task: build-ci-image
    privileged: true
    file: git-repo/ci/tasks/build-ci-image.yml
    params:
      DOCKER_HUB_AUTH: ((docker-hub-auth))
    output_mapping:
      image: ci-image
  - put: ci-image
    params:
      image: ci-image/image.tar
- name: build
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: true
  - do:
    - task: build-project
      image: ci-image
      privileged: true
      timeout: ((task-timeout))
      file: git-repo/ci/tasks/build-project.yml
      params:
        <<: *docker-hub-task-params
        BRANCH: ((branch))
    on_failure:
      do:
      - put: slack-alert
        params:
          <<: *slack-fail-params
  - put: slack-alert
    params:
      <<: *slack-success-params
- name: stage-milestone
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - task: stage
    image: ci-image
    file: git-repo/ci/tasks/stage.yml
    params:
      <<: *docker-hub-task-params
      RELEASE_TYPE: M
  - put: artifactory-repo
    params:
      <<: *artifactory-repo-put-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: stage-rc
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - task: stage
    image: ci-image
    file: git-repo/ci/tasks/stage.yml
    params:
      <<: *docker-hub-task-params
      RELEASE_TYPE: RC
  - put: artifactory-repo
    params:
      <<: *artifactory-repo-put-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: stage-release
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - task: stage
    image: ci-image
    file: git-repo/ci/tasks/stage.yml
    params:
      <<: *docker-hub-task-params
      RELEASE_TYPE: RELEASE
  - put: artifactory-repo
    params:
      <<: *artifactory-repo-put-params
      repo: libs-staging-local
  - put: git-repo
    params:
      repository: stage-git-repo
- name: promote-milestone
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - get: artifactory-repo
    trigger: false
    passed: [stage-milestone]
    params:
      download_artifacts: false
      save_build_info: true
  - task: promote
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: M
      <<: *artifactory-task-params
  - task: generate-changelog
    file: git-repo/ci/tasks/generate-changelog.yml
    params:
      RELEASE_TYPE: M
      GITHUB_USERNAME: ((github-username))
      GITHUB_TOKEN: ((github-ci-release-token))
  - put: github-pre-release
    params:
      name: generated-changelog/tag
      tag: generated-changelog/tag
      body: generated-changelog/changelog.md
- name: promote-rc
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - get: artifactory-repo
    trigger: false
    passed: [stage-rc]
    params:
      download_artifacts: false
      save_build_info: true
  - task: promote
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: RC
      <<: *artifactory-task-params
  - task: generate-changelog
    file: git-repo/ci/tasks/generate-changelog.yml
    params:
      RELEASE_TYPE: RC
  - put: github-pre-release
    params:
      name: generated-changelog/tag
      tag: generated-changelog/tag
      body: generated-changelog/changelog.md
- name: promote-release
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - get: artifactory-repo
    trigger: false
    passed: [stage-release]
    params:
      download_artifacts: true
      save_build_info: true
  - task: promote
    file: git-repo/ci/tasks/promote.yml
    params:
      RELEASE_TYPE: RELEASE
      <<: *artifactory-task-params
      <<: *sonatype-task-params
- name: create-github-release
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
  - get: artifactory-repo
    trigger: true
    passed: [promote-release]
    params:
      download_artifacts: false
      save_build_info: true
  - task: generate-changelog
    file: git-repo/ci/tasks/generate-changelog.yml
    params:
      RELEASE_TYPE: RELEASE
  - put: github-release
    params:
      name: generated-changelog/tag
      tag: generated-changelog/tag
      body: generated-changelog/changelog.md
- name: publish-eclipse-update-site
  serial: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: false
  - get: artifactory-repo
    trigger: false
    passed: [promote-release]
    params:
      save_build_info: true
  - task: publish-eclipse-update-site
    image: ci-image
    file: git-repo/ci/tasks/publish-eclipse-update-site.yml
    params:
      ARTIFACTORY_USERNAME: ((artifactory-username))
      ARTIFACTORY_PASSWORD: ((artifactory-password))
groups:
- name: builds
  jobs: [build]
- name: releases
  jobs: [stage-milestone, stage-rc, stage-release, promote-milestone, promote-rc, promote-release, create-github-release, publish-eclipse-update-site]
- name: ci-images
  jobs: [build-ci-images]
